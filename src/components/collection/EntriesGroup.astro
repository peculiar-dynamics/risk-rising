---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

import ContentCard from "~/components/collection/ContentCard.astro"

import Button from "~/components/common/Button.astro"

import { formatCollection } from "~/helpers/contentParser";
import { slugify, humanize, pluralize } from "~/helpers/textConverter";

const {collection, latest, filter, taxonomy, items, readMore} = Astro.props;

const entries = await latest ? formatCollection( await getCollection(collection), {limit: 4}) : items || formatCollection((await getCollection(collection)).filter( (i: any) => i.data[filter].includes(taxonomy))
, {limit: 4 })

const maxCols = entries.length < 4 ? 2 : 3


---

<section class:list={["w-full flex flex-col items-center justify-center max-w-screen-2xl py-4"]}>
    { !items && filter && ( 
      <div class="flex flex-col w-full max-w-screen-xl container p-4 sm:py-8 sm:px-6 md:px-8 gap-4 sm:gap-8">
        <p class="font-semibold uppercase  w-full text-left subtitle">{pluralize.singular(filter)}</p>
        <h2 class="font-semibold uppercase  w-full text-left ">{taxonomy || "Latest"}</h2>
      </div>
    )}


    <ol class:list={["mb-8 w-full grid grid-cols-1  gap-4 md:mb-16  justify-items-center content-stretch px-4 lg:px-8", readMore && "sm:grid-cols-2 lg:grid-cols-4 ", latest && "md:grid-cols-2", items && `sm:grid-cols-2 lg:grid-cols-${maxCols}` ]}>
      {entries.map((entry: any ) => (
          <ContentCard data={entry} bg wide={latest} />
          <hr class="last:hidden h-px w-4/5 sm:hidden my-4 bg-[--outline] border-0 ">
      ))}
    </ol>

    { readMore && ( 
      <Button
        href={`/${collection}/${slugify(filter)}/${slugify(taxonomy)}`}
        text="Read More"
        type="filled"
        addClasses="w-fit"
        slot="buttons"
    
        />
    )}
  </section>